#!/usr/bin/bash

PATH=/opt/local/gnu/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin

# Exit if any commands fail
set -o errexit

MUNIN_PLUGINS="
	apache_accesses
	apache_processes
	apache_volume
	passenger_status
"

echo "* Remove unused httpd config files"
HTTPD_CONF_RM="httpd-autoindex.conf
httpd-dav.conf
httpd-default.conf
httpd-info.conf
httpd-languages.conf
httpd-manual.conf
httpd-mpm.conf
httpd-multilang-errordoc.conf
httpd-ssl.conf
httpd-userdir.conf
httpd-vhosts.conf"

for CONF_RM in ${HTTPD_CONF_RM}; do
  rm -f /opt/local/etc/httpd/${CONF_RM}
done

echo "* Setup ruby env"

echo "gem: --no-rdoc --no-ri " >> /opt/local/etc/gemrc
gem install gemenv
gem install mysql2

# gem install passenger
# /opt/local/bin/passenger-install-apache2-module -a --languages ruby

echo "* Setup ruby home"
groupadd ruby
useradd -m -s /usr/bin/bash -d /home/ruby -g ruby ruby
# groupadd sshlogin
# usermod -G ruby,sshlogin ruby

cat >> /home/ruby/.bashrc << EOF
source /home/ruby/www/shared/gems/bin/activate
EOF

mkdir -p /home/ruby/www/releases
mkdir -p /home/ruby/www/shared/config
mkdir -p /home/ruby/www/shared/content
mkdir -p /home/ruby/www/shared/log
mkdir -p /home/ruby/www/shared/system
cd /home/ruby/www/shared
/opt/local/bin/gemenv gems

cat >> /home/ruby/www/shared/gems/bin/ruby << EOF
#!/usr/bin/env bash
DIR=$(dirname "${BASH_SOURCE[0]}")
if [[ -f "$DIR/activate" ]]
then
  source "$DIR/activate"
  exec /opt/local/bin/ruby "$@"
else
  echo "ERROR: Missing gemenv environment file: '$DIR/activate'" >&2
  exit 1
fi
EOF
chmod +x /home/ruby/www/shared/gems/bin/ruby

cat > /home/ruby/www/shared/gems/bin/activate << EOF
export VIRTUAL_ENV="/home/ruby/www/shared/gems"
export PATH="$VIRTUAL_ENV/gem_home/bin:/usr/local/sbin:/usr/local/bin:/opt/local/sbin:/opt/local/bin:/usr/sbin:/usr/bin:/sbin"

if [ -n "$GEM_HOME" ]; then
  unset GEM_HOME
fi

export GEM_HOME=$VIRTUAL_ENV/gem_home
export GEM_PATH=$(/opt/local/bin/gem env home):/opt/local/lib/ruby/gems/2.2.0

if [ -n "$BASH" -o -n "$ZSH_VERSION" ] ; then
    hash -r 2> /dev/null
fi
EOF

chown -R ruby:ruby /home/ruby/www

# Configuring image specific packages
echo "* Configuring image specific packages.";
mkdir -p /var/log/httpd/old

chmod 0640 /opt/qutic/mysql-proxy/etc/my.cnf
svccfg import /opt/qutic/mysql-proxy/share/mysql-proxy.xml
svcadm enable mysql-proxy

# Clean up
echo "* Cleaning up."
#pkgin -y remove gmake
#pkgin -y remove gcc49
rm /root/customize

# Prepare image for provisioning
sm-prepare-image -y
